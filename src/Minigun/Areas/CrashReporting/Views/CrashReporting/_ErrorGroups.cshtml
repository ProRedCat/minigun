@model IEnumerable<Minigun.Models.ErrorGroup>

<div class="loading-container">
    <div class="loading-indicator flex items-center justify-center h-56 border border-secondary-blue-grey m-4">
        @await Html.PartialAsync("_LoadingSpinner")
    </div>
    
    <div class="m-4 bg-white shadow-md overflow-hidden border-gray-300">

        <div class="flex flex-wrap text-sm font-medium text-center text-gray-500 border-b border-gray-200">
            <div class="px-4 py-3 bg-gray-100">Active <span class="ml-2 bg-red-500 text-white rounded-full px-2 py-1">@Model.Count(e => e.Status == "active")</span></div>
            <div class="px-4 py-3">Resolved <span class="ml-2 bg-green-500 text-white rounded-full px-2 py-1">@Model.Count(e => e.Status == "resolved")</span></div>
            <div class="px-4 py-3">Ignored <span class="ml-2 bg-blue-500 text-white rounded-full px-2 py-1">@Model.Count(e => e.Status == "ignored")</span></div>
            <div class="px-4 py-3">Permanently ignored <span class="ml-2 bg-yellow-500 text-white rounded-full px-2 py-1">@Model.Count(e => e.Status == "permanentlyignored")</span></div>
        </div>

        <table class="w-full text-sm text-left text-gray-500">
            <thead class="text-xs text-gray-700 uppercase bg-gray-50">
            <tr>
                <th scope="col" class="p-4">
                    <div class="flex items-center">
                        <input id="checkbox-all" type="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500">
                        <label for="checkbox-all" class="sr-only">checkbox</label>
                    </div>
                </th>
                <th scope="col" class="px-6 py-3">Message</th>
                <th scope="col" class="px-6 py-3">Last seen</th>
                <th scope="col" class="px-6 py-3">First seen</th>
                <th scope="col" class="px-6 py-3">Count</th>
                <th scope="col" class="px-6 py-3">Users</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var errorGroup in Model)
            {
                <tr class="bg-white border-b hover:bg-gray-50">
                    <td class="w-4 p-4">
                        <div class="flex items-center">
                            <input id="checkbox-@errorGroup.Identifier" type="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500">
                            <label for="checkbox-@errorGroup.Identifier" class="sr-only">checkbox</label>
                        </div>
                    </td>
                    <td class="px-6 py-4 font-medium text-gray-900">
                        <a href="@errorGroup.ApplicationUrl" class="font-medium text-blue-600 hover:underline">@errorGroup.Message</a>
                    </td>
                    <td class="px-6 py-4">@errorGroup.LastOccurredAt</td>
                    <td class="px-6 py-4">@errorGroup.CreatedAt.ToString("g")</td>
                    <td class="px-6 py-4">@(errorGroup.ResolvedIn != null ? "Resolved" : "Active")</td>
                    <td class="px-6 py-4">@(errorGroup.DiscardNewOccurrences ? "Discarded" : "Tracking")</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>